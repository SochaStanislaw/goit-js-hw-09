{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,0BAKMC,EAAO,CACXC,cAAeC,SAASC,eAAe,mBACvCC,SAAUF,SAASG,cAAc,sBACjCC,SAAUJ,SAASG,cAAc,sBACjCE,SAAUL,SAASG,cAAc,mBACjCG,UAAWN,SAASG,cAAc,oBAClCI,YAAaP,SAASG,cAAc,sBACpCK,YAAaR,SAASG,cAAc,uBAElCM,EAAe,KACfC,EAAa,KAuBjB,SAASC,EAAaC,G,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,QAASC,EAAxBJ,EAAwBI,QAC5ClB,EAAKO,SAASY,YAAcC,EAAeL,GAC3Cf,EAAKQ,UAAUW,YAAcC,EAAeJ,GAC5ChB,EAAKS,YAAYU,YAAcC,EAAeH,GAC9CjB,EAAKU,YAAYS,YAAcC,EAAeF,E,CAGhD,SAASE,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CA7BnCvB,EAAKI,SAASoB,iBAAiB,SAG/B,WACExB,EAAKC,cAAcwB,UAAW,EAC9BzB,EAAKI,SAASqB,UAAW,EACzBb,EAAac,aAAY,WAEvBb,EAiCJ,SAAuBc,GACrB,GAAIhB,EAAegB,GAAe,EAIhC,OAHA3B,EAAKC,cAAcwB,UAAW,EAC9BG,cAAchB,GACdiB,EAAAC,OAAOC,QAAQ,aACR,CAAEhB,KAAM,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,GAEnD,OAAO,EAAApB,EAAAkC,SAAUrB,EAAegB,E,CAxCjBM,CADOC,KAAKC,O,GAExB,I,IARLnC,EAAKM,SAASkB,iBAAiB,SAW/B,WACExB,EAAKC,cAAcwB,UAAW,EAC9B,IAAMU,EAAM,IAAID,KAChBE,EAAkBC,QAAQF,GAC1BP,cAAchB,GACdC,EAAa,CAAEE,KAAM,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,IACvDW,EAAAC,OAAOQ,KAAK,oC,IAiCd,IAAMF,GAAoB,EAAAG,EAAAP,SAAUhC,EAAKC,cAAe,CACtDuC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIR,KACjBS,gBAAiB,EACjBC,QAAA,SAAQC,GACNlC,EAAekC,EAAc,GAAGC,UAxBdZ,KAAKC,MACPxB,EAChBkB,EAAAC,OAAOiB,QAAQ,sCAEf/C,EAAKI,SAASqB,UAAW,C","sources":["src/js/02-timer.js"],"sourcesContent":["import convertMs from './convertMsToTime.js';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputCalendar: document.getElementById('datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  resetBtn: document.querySelector('button[data-reset]'),\n  dataDays: document.querySelector('span[data-days]'),\n  dataHours: document.querySelector('span[data-hours]'),\n  dataMinutes: document.querySelector('span[data-minutes]'),\n  dataSeconds: document.querySelector('span[data-seconds]'),\n};\nlet selectedDate = null;\nlet intervalId = null;\n\nrefs.startBtn.addEventListener('click', startTimer);\nrefs.resetBtn.addEventListener('click', resetTimer);\n\nfunction startTimer() {\n  refs.inputCalendar.disabled = true;\n  refs.startBtn.disabled = true;\n  intervalId = setInterval(() => {\n    const currentDate = Date.now();\n    drawingTimer(calculateTime(currentDate));\n  }, 1000);\n}\n\nfunction resetTimer() {\n  refs.inputCalendar.disabled = false;\n  const now = new Date();\n  flatpickrInstance.setDate(now);\n  clearInterval(intervalId);\n  drawingTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n  Notify.info('Date and time updated,timer reset');\n}\n\nfunction drawingTimer({ days, hours, minutes, seconds }) {\n  refs.dataDays.textContent = addLeadingZero(days);\n  refs.dataHours.textContent = addLeadingZero(hours);\n  refs.dataMinutes.textContent = addLeadingZero(minutes);\n  refs.dataSeconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction checkDate() {\n  const currentDate = Date.now();\n  if (currentDate > selectedDate) {\n    Notify.warning('Please choose a date in the future');\n  } else {\n    refs.startBtn.disabled = false;\n  }\n}\n\nfunction calculateTime(currentDate) {\n  if (selectedDate - currentDate <= 0) {\n    refs.inputCalendar.disabled = false;\n    clearInterval(intervalId);\n    Notify.success('\\u{231b} \\u{231b} \\u{231b} \\u{231b} \\u{231b}');\n    return { days: 0, hours: 0, minutes: 0, seconds: 0 };\n  }\n  return convertMs(selectedDate - currentDate);\n}\n\nconst flatpickrInstance = flatpickr(refs.inputCalendar, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0].getTime();\n    checkDate();\n  },\n});\n"],"names":["$4ZuaP","parcelRequire","$84b9dae4df53835d$var$refs","inputCalendar","document","getElementById","startBtn","querySelector","resetBtn","dataDays","dataHours","dataMinutes","dataSeconds","$84b9dae4df53835d$var$selectedDate","$84b9dae4df53835d$var$intervalId","$84b9dae4df53835d$var$drawingTimer","param","days","hours","minutes","seconds","textContent","$84b9dae4df53835d$var$addLeadingZero","value","String","padStart","addEventListener","disabled","setInterval","currentDate","clearInterval","$h6c0i","Notify","success","default","$84b9dae4df53835d$var$calculateTime","Date","now","$84b9dae4df53835d$var$flatpickrInstance","setDate","info","$dbdyf","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","getTime","warning"],"version":3,"file":"02-timer.b33a3db4.js.map"}