{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAOA,MAAMC,EAAO,CACXC,cAAeC,SAASC,eAAe,mBACvCC,SAAUF,SAASG,cAAc,sBACjCC,SAAUJ,SAASG,cAAc,sBACjCE,SAAUL,SAASG,cAAc,mBACjCG,UAAWN,SAASG,cAAc,oBAClCI,YAAaP,SAASG,cAAc,sBACpCK,YAAaR,SAASG,cAAc,uBAGtC,IAAIM,EAAe,KACfC,EAAa,KAuBjB,SAASC,GAAaC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC5CjB,EAAKO,SAASW,YAAcC,EAAeL,GAC3Cd,EAAKQ,UAAUU,YAAcC,EAAeJ,GAC5Cf,EAAKS,YAAYS,YAAcC,EAAeH,GAC9ChB,EAAKU,YAAYQ,YAAcC,EAAeF,E,CAGhD,SAASE,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CA7BnCtB,EAAKI,SAASmB,iBAAiB,SAG/B,WACEvB,EAAKC,cAAcuB,UAAW,EAC9BxB,EAAKI,SAASoB,UAAW,EACzBZ,EAAaa,aAAY,KAEvBZ,EAiCJ,SAAuBa,GACrB,GAAIf,EAAee,GAAe,EAIhC,OAHA1B,EAAKC,cAAcuB,UAAW,EAC9BG,cAAcf,GACdgB,EAAAC,OAAOC,QAAQ,aACR,CAAEhB,KAAM,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,GAEnD,OAAO,EAAAc,EAAAC,SAAUrB,EAAee,E,CAxCjBO,CADOC,KAAKC,OACe,GACvC,I,IARLnC,EAAKM,SAASiB,iBAAiB,SAW/B,WACEvB,EAAKC,cAAcuB,UAAW,EAC9B,MAAMW,EAAM,IAAID,KAChBE,EAAkBC,QAAQF,GAC1BR,cAAcf,GACdC,EAAa,CAAEC,KAAM,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,IACvDW,EAAAC,OAAOS,KAAK,oC,IAiCd,MAAMF,GAAoB,EAAAtC,EAAAkC,SAAUhC,EAAKC,cAAe,CACtDsC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIP,KACjBQ,gBAAiB,EACjBC,QAAQC,GACNjC,EAAeiC,EAAc,GAAGC,UAxBdX,KAAKC,MACPxB,EAChBiB,EAAAC,OAAOiB,QAAQ,sCAEf9C,EAAKI,SAASoB,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport convertMs from './convertMsToTime.js';\n\nconst refs = {\n  inputCalendar: document.getElementById('datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  resetBtn: document.querySelector('button[data-reset]'),\n  dataDays: document.querySelector('span[data-days]'),\n  dataHours: document.querySelector('span[data-hours]'),\n  dataMinutes: document.querySelector('span[data-minutes]'),\n  dataSeconds: document.querySelector('span[data-seconds]'),\n};\n\nlet selectedDate = null;\nlet intervalId = null;\n\nrefs.startBtn.addEventListener('click', startTimer);\nrefs.resetBtn.addEventListener('click', resetTimer);\n\nfunction startTimer() {\n  refs.inputCalendar.disabled = true;\n  refs.startBtn.disabled = true;\n  intervalId = setInterval(() => {\n    const currentDate = Date.now();\n    drawingTimer(calculateTime(currentDate));\n  }, 1000);\n}\n\nfunction resetTimer() {\n  refs.inputCalendar.disabled = false;\n  const now = new Date();\n  flatpickrInstance.setDate(now);\n  clearInterval(intervalId);\n  drawingTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n  Notify.info('Date and time updated,timer reset');\n}\n\nfunction drawingTimer({ days, hours, minutes, seconds }) {\n  refs.dataDays.textContent = addLeadingZero(days);\n  refs.dataHours.textContent = addLeadingZero(hours);\n  refs.dataMinutes.textContent = addLeadingZero(minutes);\n  refs.dataSeconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction checkDate() {\n  const currentDate = Date.now();\n  if (currentDate > selectedDate) {\n    Notify.warning('Please choose a date in the future');\n  } else {\n    refs.startBtn.disabled = false;\n  }\n}\n\nfunction calculateTime(currentDate) {\n  if (selectedDate - currentDate <= 0) {\n    refs.inputCalendar.disabled = false;\n    clearInterval(intervalId);\n    Notify.success('\\u{231b} \\u{231b} \\u{231b} \\u{231b} \\u{231b}');\n    return { days: 0, hours: 0, minutes: 0, seconds: 0 };\n  }\n  return convertMs(selectedDate - currentDate);\n}\n\nconst flatpickrInstance = flatpickr(refs.inputCalendar, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0].getTime();\n    checkDate();\n  },\n});\n"],"names":["$fbklV","parcelRequire","$47d4ff9957288465$var$refs","inputCalendar","document","getElementById","startBtn","querySelector","resetBtn","dataDays","dataHours","dataMinutes","dataSeconds","$47d4ff9957288465$var$selectedDate","$47d4ff9957288465$var$intervalId","$47d4ff9957288465$var$drawingTimer","days","hours","minutes","seconds","textContent","$47d4ff9957288465$var$addLeadingZero","value","String","padStart","addEventListener","disabled","setInterval","currentDate","clearInterval","$iQIUW","Notify","success","$gAlFo","default","$47d4ff9957288465$var$calculateTime","Date","now","$47d4ff9957288465$var$flatpickrInstance","setDate","info","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","getTime","warning"],"version":3,"file":"03-promises.7a752d36.js.map"}